#
#    Copyright 2016-2024 the original author or authors.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

services:
  pet-service:
    image: jpetstore
    environment:
      OTEL_SERVICE_NAME: "pet-service"
      OTEL_RESOURCE_ATTRIBUTES: "service=pet-service,env=dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      # Logs are disabled by default
      OTEL_LOGS_EXPORTER: "otlp"
      OTEL_METRICS_EXPORTER: "otlp"
      OTEL_TRACES_EXPORTER: "otlp"
    ports:
      - "8080:8080"
    depends_on:
      collector:
        condition: service_started
      # mysql:
      #   condition: service_healthy


  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml:ro
    restart: always
    ports:
      - "4317:4317" # OTLP gRPC receiver
      - "8888:8888" # Prometheus exporter metrics

  # tempo:
  #   container_name: tempo
  #   image: grafana/tempo:latest
  #   command: [ "-config.file=/etc/tempo.yml" ]
  #   volumes:
  #     - ./docker/tempo/tempo.yml:/etc/tempo.yml
  #   restart: always
  #   ports:
  #     - "4317"  # otlp grpc
  #     - "3200"  # tempo as grafana datasource

  # loki:
  #   container_name: loki
  #   image: grafana/loki:latest
  #   command: -config.file=/etc/loki/local-config.yaml
  #   restart: always
  #   ports:
  #     - "3100"

  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus
  #   volumes:
  #     - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - --config.file=/etc/prometheus/prometheus.yml
  #     - --enable-feature=exemplar-storage
  #     - --web.enable-remote-write-receiver
  #   restart: always
  #   ports:
  #     - '9090:9090'
  #   depends_on:
  #     - collector

  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana
  #   volumes:
  #     - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - prometheus
  #     - loki
  #     - jaeger-all-in-one
  #     - zipkin-all-in-one
  #     - tempo

  # jaeger-all-in-one:
  #   container_name: jaeger
  #   image: jaegertracing/all-in-one:latest
  #   environment:
  #     - COLLECTOR_OTLP_ENABLED=true
  #   restart: always
  #   ports:
  #     - "16686:16686"
  #     - "4317"

  # zipkin-all-in-one:
  #   container_name: zipkin
  #   image: openzipkin/zipkin:latest
  #   restart: always
  #   ports:
  #     - "9411:9411"


  # mysql:
  #   image: 'mysql:latest'
  #   ports:
  #     - "3306:3306"
  #   environment:
  #       MYSQL_ROOT_PASSWORD: petclinic
  #       MYSQL_USER: petclinic
  #       MYSQL_PASSWORD: petclinic
  #       MYSQL_DATABASE: petclinic
  #   volumes:
  #     - "./conf.d:/etc/mysql/conf.d:ro"
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "--silent"]
  #     retries: 1

#  postgres:
#    image: postgres:16.3
#    ports:
#      - "5432:5432"
#    environment:
#      - POSTGRES_PASSWORD=petclinic
#      - POSTGRES_USER=petclinic
#      - POSTGRES_DB=petclinic
#    profiles:
#      - postgres
