#
#    Copyright 2016-2024 the original author or authors.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

exporters:
  googlecloud:
    log:
      default_log_name: opentelemetry.io/collector-exported-log
  sapm:
    access_token: 4WPhtH_05SxEfurRUlKZ9w
    access_token_passthrough: true
    endpoint: https://ingest.us1.signalfx.com/v2/trace
    max_connections: 100
    num_workers: 8
    log_detailed_response: true
  signalfx:
    access_token: 4WPhtH_05SxEfurRUlKZ9w
    realm: us1
    api_url: https://api.us1.signalfx.com
    ingest_url: https://ingest.us1.signalfx.com
    sync_host_metadata: true

extensions:
  health_check:
  pprof:
  zpages:

processors:
  memory_limiter:
    check_interval: 1s
    limit_percentage: 65
    spike_limit_percentage: 20
  batch:
  filter/drop_actuator:
    traces:
      span:
        - attributes["http.route"] == "/actuator/prometheus"
        - attributes["http.route"] == "/actuator/health"
  resourcedetection:
    detectors: [gcp, env, system]
    timeout: 10s
  resource:
    attributes:
    - key: service.instance.id
      from_attribute: faas.id
      action: upsert
    - key: cloud.region
      value: "asia-east1"
      action: upsert
    - key: cloud.platform
      value: "gcp_cloud_run"
      action: insert
service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, filter/drop_actuator, resourcedetection]
      exporters: [sapm]
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [memory_limiter, batch, resourcedetection,filter/drop_actuator, resource]
      exporters: [signalfx]
